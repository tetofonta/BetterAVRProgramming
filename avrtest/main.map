
Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

                0x0000000000002000                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x2000
                0x000000000000ffa0                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xffa0
                0x0000000000010000                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                0x0000000000000400                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000010                __DEBUG_BUFFER_SIZE__ = DEFINED (__DEBUG_BUFFER_SIZE__)?__DEBUG_BUFFER_SIZE__:0x10

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000       0x78
 *(.vectors)
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000000                . = ALIGN (0x2)
                0x0000000000000000                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000000        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000000                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem.*)
                0x0000000000000000                . = ALIGN (0x2)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000000                __ctors_start = .
 *(.ctors)
                0x0000000000000000                __ctors_end = .
                0x0000000000000000                __dtors_start = .
 *(.dtors)
                0x0000000000000000                __dtors_end = .
 SORT_BY_NAME(*)(.ctors)
 SORT_BY_NAME(*)(.dtors)
 *(.init0)
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 *(.init9)
 *(.text)
 .text          0x0000000000000000        0x0 main.o
                0x0000000000000000                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000000       0x78 main.o
                0x0000000000000000                main
                0x0000000000000078                . = ALIGN (0x2)
 *(.fini9)
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 *(.fini0)
 *(.hightext)
 *(.hightext*)
 *(.progmemx.*)
                0x0000000000000078                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
                0x0000000000000078                _etext = .

.data           0x0000000000800060        0x4 load address 0x0000000000000078
                [!provide]                        PROVIDE (__dbgdata_start = .)
 *(.dbgdata)
 .dbgdata       0x0000000000800060        0x3 main.o
                0x0000000000800060                buffer
                0x0000000000800062                debugger_flags
                [!provide]                        PROVIDE (__data_start = .)
 *(.data)
 .data          0x0000000000800063        0x1 main.o
                0x0000000000800063                data
 *(.data*)
 *(.gnu.linkonce.d*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.r*)
                0x0000000000800064                . = ALIGN (0x2)
                0x0000000000800064                _edata = .
                [!provide]                        PROVIDE (__data_end = .)

.bss            0x0000000000800064        0x4
                [!provide]                        PROVIDE (__bss_start = .)
 *(.bss)
 .bss           0x0000000000800064        0x4 main.o
                0x0000000000800064                bss
 *(.bss*)
 *(COMMON)
                [!provide]                        PROVIDE (__bss_end = .)
                0x0000000000000078                __data_load_start = LOADADDR (.data)
                0x000000000000007c                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800068        0x0
                [!provide]                        PROVIDE (__noinit_start = .)
 *(.noinit .noinit.* .gnu.linkonce.n.*)
                [!provide]                        PROVIDE (__noinit_end = .)
                0x0000000000800068                _end = .
                [!provide]                        PROVIDE (__heap_start = .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x12
 *(.comment)
 .comment       0x0000000000000000       0x12 main.o
                                         0x13 (size before relaxing)

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x20
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x20 main.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x238
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x238 main.o

.debug_abbrev   0x0000000000000000      0x1bd
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x1bd main.o

.debug_line     0x0000000000000000      0x214
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000      0x214 main.o

.debug_frame    0x0000000000000000       0x24
 *(.debug_frame)
 .debug_frame   0x0000000000000000       0x24 main.o

.debug_str      0x0000000000000000      0x112
 *(.debug_str)
 .debug_str     0x0000000000000000      0x112 main.o
                                        0x146 (size before relaxing)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_addr
 *(.debug_addr)

.debug_line_str
                0x0000000000000000       0x85
 *(.debug_line_str)
 .debug_line_str
                0x0000000000000000       0x85 main.o
                                         0xd2 (size before relaxing)

.debug_loclists
                0x0000000000000000       0x81
 *(.debug_loclists)
 .debug_loclists
                0x0000000000000000       0x81 main.o

.debug_macro
 *(.debug_macro)

.debug_names
 *(.debug_names)

.debug_rnglists
                0x0000000000000000       0x1f
 *(.debug_rnglists)
 .debug_rnglists
                0x0000000000000000       0x1f main.o

.debug_str_offsets
 *(.debug_str_offsets)

.debug_sup
 *(.debug_sup)
LOAD main.o
OUTPUT(main.elf elf32-avr)
LOAD linker stubs
